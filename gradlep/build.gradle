ext {
  daggerVersion = "1.2.2"
  daggerGroup = "com.squareup.dagger"
  daggerVersion = "1.2.2"
  dagger2Group = "com.google.dagger"
  dagger2Version = "2.0.2"
  hk2Version = "2.4.0-b34"
  springGroup = "org.springframework"
  springVersion = "4.2.4.RELEASE"
  libraries = ['dagger': [group: daggerGroup, name: 'dagger', version: daggerVersion],
               'dagger-compiler': [group: daggerGroup, name: 'dagger-compiler', version: daggerVersion],
               'dagger2': [group: dagger2Group, name: 'dagger', version: dagger2Version],
               'dagger2-compiler': [group: dagger2Group, name: 'dagger-compiler', version: dagger2Version],
               'guice': [group: 'com.google.inject', name: 'guice', version: '4.0'],
               'hk2-core': [group: 'org.glassfish.hk2', name: 'hk2-core', version: hk2Version],
               'hk2-testng': [group: 'org.glassfish.hk2', name: 'hk2-testng', version: hk2Version],
               'spring-context': [group: springGroup, name: 'spring-context', version: springVersion]
              ]
}

subprojects {
  apply plugin: 'java'
  compileJava.options.encoding = 'UTF-8'
  compileTestJava.options.encoding = 'UTF-8'
  sourceCompatibility = 1.8
  targetCompatibility = 1.8
  repositories {
    mavenCentral()
  }
  dependencies {
    testRuntime 'ch.qos.logback:logback-classic:1.1.3'
    testCompile libraries.'guice'
    testCompile 'com.google.http-client:google-http-client:1.21.0'
    testCompile 'commons-codec:commons-codec:1.10'
    testCompile 'commons-io:commons-io:2.4'
    testCompile 'org.apache.commons:commons-lang3:3.4'
    testCompile 'org.glassfish.jersey.core:jersey-client:2.22.1'
    testCompile 'org.mockito:mockito-core:2.0.36-beta'
    testCompile 'org.slf4j:slf4j-api:1.7.13'
    testCompile 'org.testng:testng:6.9.10'
  }
  compileJava {
  }
  compileTestJava {
  }
  test {
    useTestNG()
  }
}

project(':hello-world-api') {
  apply plugin: 'application'
  mainClassName = "com.github.jinahya.verbose.hello.SuccinctHelloWorld"
}

project(':hello-world-lib') {
  dependencies {
    compile project(':hello-world-api')
  }
  if (project.hasProperty('dagger')) {
    dependencies {
      testCompile libraries.'dagger-compiler'
    }
    sourceSets {
      test {
        java {
          srcDir 'src/test/java-dagger'
        }
      }
    }
  }
  if (project.hasProperty('dagger2')) {
    dependencies {
      testCompile libraries.'dagger2-compiler'
    }
    sourceSets {
      test {
        java {
          srcDir 'src/test/java-dagger2'
        }
      }
    }
  }
  if (project.hasProperty('hk2')) {
    dependencies {
      testCompile libraries.'hk2-core'
    }
    sourceSets {
      test {
        java {
          srcDir 'src/test/java-hk2'
        }
      }
    }
  }
  if (project.hasProperty('spring')) {
    dependencies {
      testCompile libraries.'spring-context'
    }
    sourceSets {
      test {
        java {
          srcDir 'src/test/java-spring'
        }
      }
    }
  }
}

project(':hello-world-app') {
  dependencies {
    compile project(':hello-world-lib')
  }
  apply plugin: 'application'
  mainClassName = "com.github.jinahya.verbose.hello.HelloWorldMain"
}

project(':hex-codec-api') {
}

project(':hex-codec-lib') {
  dependencies {
    compile project(':hex-codec-api')
    testCompile libraries.'dagger2-compiler'
  }
}

project(':percent-codec-api') {
}

project(':percent-codec-lib') {
  dependencies {
    compile project(':hex-codec-api')
    runtime project(':hex-codec-lib')
    compile project(':percent-codec-api')
    testCompile libraries.'hk2-testng'
  }
}
